@model List<dynamic>
@using Microsoft.AspNetCore.Localization

@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @await Html.PartialAsync("_svgsTemplate")
    
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.Culture.Name ?? "en-US";
    var isArabic = currentCulture == "ar-SA";
}

@section Styles {
    <link rel="stylesheet" href="~/css/style.css">
    <link rel="stylesheet" href="~/css/homePage.css">
    <link rel="stylesheet" href="~/css/Homepage-DocCard.css">
    <link rel="stylesheet" href="~/css/_RecordDetails.css">
    <link rel="stylesheet" href="~/css/_rtl_Styles.css" />
    <link rel="stylesheet" href="~/css/multi-select-dropdown.css" />

}

@section Scripts {
    <script src="@Url.Content("https://cdn.jsdelivr.net/npm/fitty@2.3.6/dist/fitty.min.js")"></script>
    <script src="@Url.Content("~/js/card-animations.js")"></script>
    <script src="@Url.Content("~/lib/bootstrap/dist/js/bootstrap.js")"></script>
    <script src="@Url.Content("~/js/homePage.js")"></script>
    <script src="@Url.Content("~/js/moblieMenu.js")"></script>
    <script src="@Url.Content("~/js/ShowDetailsTracking.js")"></script>
    <script src="@Url.Content("~/js/recordDetailsModal.js")"></script>
    <script src="@Url.Content("~/js/multi-select-dropdown.js")"></script>
    <script src="@Url.Content("~/js/homePageFilters.js")"></script>
    <script src="@Url.Content("~/js/savedFunctions.js")"></script>
    <script src="@Url.Content("~/js/searchFunctionality.js")"></script>
    
    <script>
        // Handle URL parameters for footer navigation
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const filter = urlParams.get('filter');
            
            if (filter) {
                // Wait a bit for all scripts to load
                setTimeout(function() {
                    switch(filter) {
                        case 'student-guides':
                            if (typeof navigateToStudentGuides === 'function') {
                                // Create a dummy button element for the function
                                const dummyBtn = document.createElement('button');
                                navigateToStudentGuides(dummyBtn);
                            }
                            break;
                        case 'student-rules':
                            if (typeof navigateToStudentRules === 'function') {
                                const dummyBtn = document.createElement('button');
                                navigateToStudentRules(dummyBtn);
                            }
                            break;
                        case 'employee-rules':
                            if (typeof navigateToEmployeeRules === 'function') {
                                const dummyBtn = document.createElement('button');
                                navigateToEmployeeRules(dummyBtn);
                            }
                            break;
                        case 'academic-rules':
                            if (typeof navigateToAcademicRules === 'function') {
                                const dummyBtn = document.createElement('button');
                                navigateToAcademicRules(dummyBtn);
                            }
                            break;
                        case 'saved':
                            if (typeof navigateToSaved === 'function') {
                                const dummyBtn = document.createElement('button');
                                navigateToSaved(dummyBtn);
                            }
                            break;
                        case 'history':
                            if (typeof navigateToHistory === 'function') {
                                navigateToHistory();
                            }
                            break;
                            
                    }
                    
                    // Clean up the URL by removing the filter parameter
                    window.history.replaceState({}, document.title, window.location.pathname);
                }, 500);
            }
        });
    </script>
}

<header class="menu">

    <div class="container-fluid h-100 bootstrap-wrapper">
        <div class="row align-items-center h-100 g-0">
            <div class="col-auto">
                <div class="d-flex align-items-center justify-content-around ms-3 gap-3 me-3 ">

                    <button id="burgerBtn" class="navbar-toggler d-lg-none me-2" style="margin-left: 15px;"
                        type="button">
                        <img src="~/svgs/navigation/hamburger-menu.svg" alt="Menu" width="36" height="36" />
                    </button>

    <!------------------- Logout Button ------------------->
                    <div class="d-none d-lg-block d-xl-block">
                        <form method="post" action="@Url.Action("Logout", "Account")" style="margin: 0">
                            @Html.AntiForgeryToken()
                            <button class="desktop-logo d-flex logo header-nav" type="submit" style="">
                                <img src="~/svgs/navigation/logout.svg" alt="Menu" width="36px" height="36px" />
                                <span class="poppins-regular" id="Logout345"></span>
                            </button>
                        </form>
                    </div>
                    
                <!-------- Vertical Divider -------->
                    <div class="vr d-none d-lg-block d-xl-block" style="color: aliceblue; opacity: 0.75;"></div>
                <!-------- Vertical Divider -------->

    <!-------------------- Language Switcher ------------------->
                    <div class="language-switcher-container d-none d-lg-block d-xl-block">
                        <button id="language-toggle" class="language-toggle-btn desktop-logo logo header-nav">
                            <img src="~/svgs/navigation/language.svg" alt="Language" width="36px" height="36px" />
                            <span class="poppins-regular" id="Language345"></span>
                        </button>
                    </div>

                @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
                    {
                <!-------- Vertical Divider ------>
                    <div class="vr d-none d-lg-block d-xl-block" style="color: aliceblue; opacity: 0.75;"></div>
                <!-------- Vertical Divider ------>

    <!--------------------- Admin Button ------------------->
                    <div class="d-none d-lg-block d-xl-block">
                    
                        <button class="desktop-logo logo header-nav d-none d-lg-flex"
                            onclick="location.href='@Url.Action("AdminPage", "Admin")'" >
                            <img src="~/svgs/nav-buttons/Normal-AdminView.svg" alt="Admin" width="36" height="36" />
                            <span class="poppins-regular" id="admin-view-button">view as Editor</span>

                        </button>
                    
                    </div>
                    }
                </div>
            </div>

            <div class="col d-flex flex-nowrap align-items-center justify-content-center">
                <div class="search-container d-flex align-items-center px-2 position-relative">
                    <button class="search-and-filter-buttons">
                        <svg class="search-icon" width="44" height="44" viewBox="0 0 44 44" fill="none">

                            <path
                                d="M21 29C25.4183 29 29 25.4183 29 21C29 16.5817 25.4183 13 21 13C16.5817 13 13 16.5817 13 21C13 25.4183 16.5817 29 21 29Z"
                                stroke="#ABB7C2" stroke-width="2" />
                            <path d="M31.0002 31L26.7002 26.7" stroke="#ABB7C2" stroke-width="2" />
                        </svg>
                    </button>
                    <input class="search poppins-regular flex-grow-1" type="text" placeholder="Search ..."
                        id="searchInput">
                    <button class="search-clear-btn d-none searchClearBtn" id="searchClearBtn" type="button">
                        Ã—
                    </button>
                    <button class="search-and-filter-buttons" id="filter-button">

                        <svg id="filter" width="44" height="44" viewBox="0 0 44 44">
                            <path d="M31 14H24" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M20 14H13" stroke="#ABB7C2" stroke-width="2" />

                            <path d="M31 22H22" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M18 22H13" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M31 30H26" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M22 30H13" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M24 12V16" stroke="#ABB7C2" stroke-width="2" />

                            <path d="M18 20V24" stroke="#ABB7C2" stroke-width="2" />
                            <path d="M26 28V32" stroke="#ABB7C2" stroke-width="2" />
                        </svg>
                    </button>
                </div>

            </div>

            <div class="col-auto flex-nowrap">
                <div>

                    <img class="profile-icon d-none d-xl-block" src="~/imgs/B&W IAU Logo (Horizontal).png"
                        alt="IAU Logo">

                    <img class="profile-icon iau-logo d-sm-block d-xl-none" src="~/imgs/B&W IAU Logo.png"
                        alt="IAU Logo">
                </div>
            </div>

        </div>

        <div id="filter-panel" class="filter-panel poppins-regular d-none">
            <div class="filter-column" style="border-inline-start: none;">
                <h3 id="filter-alphabetical-heading">Alphabetical filter</h3>
                <label><input type="radio" name="alpha" class="form-check-input" id="azFilter" value="A-Z"> <span
                        id="filter-az">A-Z</span></label>
                <label><input type="radio" name="alpha" class="form-check-input" id="zaFilter" value="Z-A"> <span
                        id="filter-za">Z-A</span></label>
            </div>

            <div class="filter-column">
                <h3 id="filter-issue-date-heading">Issue Date</h3>

                <label><input type="radio" name="dateOption" value="newest" class="form-check-input">
                    <span id="filter-newest-oldest">Newest-Oldest</span></label><br>
                <label><input type="radio" name="dateOption" value="oldest" class="form-check-input">
                    <span id="filter-oldest-newest">Oldest-Newest</span></label><br>


                <label><input type="radio" name="dateOption" id="specifyRange" value="range" class="form-check-input">
                    <span id="filter-specify-range">Specify Range:</span></label><br>

                <div id="dateRangeFields" style="display: none;
        margin-top: 10px;">
                    <div>
                        <label for="fromDate" id="filter-from-label">From:</label>
                        <input class="form-control" type="date" id="fromDate">
                    </div>
                    <div>

                        <label for="toDate" id="filter-to-label">To:</label>
                        <input class="form-control" type="date" id="toDate">
                    </div>
                </div>
            </div>

            <div class="filter-column">
                <h3>Department</h3>
                <div class="multi-select-dropdown-container">
                    <div class="multi-select-dropdown">
                        <div class="multi-select-button" id="departmentMultiSelectButton">
                            Select Departments <span class="caret">â–¼</span>
                        </div>
                        <div class="multi-select-dropdown-content" id="departmentDropdownContent">
                            <label><input type="checkbox" class="form-check-input department-option" value=""> All
                                Departments</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Reg and Admission">
                                Reg and Admission</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="CCSIT">
                                CCSIT</label>
                            <label><input type="checkbox" class="form-check-input department-option"
                                    value="Communication and tech"> Communication and tech</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Hospital">
                                Hospital</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Library">
                                Library</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Students Affairs">
                                Students Affairs</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Preparetory">
                                Preparetory</label>
                            <label><input type="checkbox" class="form-check-input department-option" value="Academic Affairs">
                                Academic Affairs</label>
                        </div>
                    </div>
                    <input type="hidden" id="departmentFilter" value="">
                </div>
            </div>


            <div class="filter-column">
                <h3 id="filter-type-heading">Type</h3>


                <label><input type="checkbox" class="form-check-input" id="regulationsFilter"
                        value="Student guides & templates"> <span id="nav-student-guides-label">Student guides &
                        templates</span></label>

                <label><input type="checkbox" class="form-check-input" id="guidelinesFilter"
                        value="Student rules & regulations"> <span id="nav-student-rules-label">Student rules &
                        regulations</span></label>

                <label><input type="checkbox" class="form-check-input" id="policiesFilter"
                        value="Employeesâ€™ rules & regulations"> <span id="nav-employee-rules-label">Employeesâ€™ rules &
                        regulations</span></label>

                <label><input type="checkbox" class="form-check-input" id="academicFilter" value="Academic rules & regulations">
                    <span id="nav-academic-rules-label"></span></label>


                <div style="margin-top: 15px;
        display: flex;">
                    <button type="button" class="apply-btn" onclick="applyFilters()" id="filter-apply-btn">Apply</button>
                    <button type="button" class="apply-btn" onclick="clearFilters()" style="background-color: #6c757d; margin: 0 10px;">Clear</button>
                </div>
            </div>
        </div>

    </div>

</header>
@await Html.PartialAsync("_moblieMenu")




<div class="navigation-bar d-none d-lg-flex">

    <div>
        <button class="bar-button" id="homeButton" data-id="homeButton" style="background-color: #2B334F;
border: none;" onclick="navigateToHome(this)">
            <div class="nav-icons svg-container">

            </div>
            <div style="display: flex;align-items: center;margin: 5px;">
                <label class="poppins-regular" id="nav-home-label"></label>

            </div>
        </button>

    </div>

    <div>
        <button class="bar-button" id="studentGuides" data-id="studentGuides" style="background-color:#01514F;"
            onclick="navigateToStudentGuides(this)">
            <div class="nav-icons svg-container">


            </div>
            <div class="nav-label">
                <label class="poppins-regular" id="nav-student-guides-label1">Student guides & templates</label>
            </div>
        </button>


    </div>

    <div>
        <button class="bar-button" id="studentRulesRegulations" data-id="studentRulesRegulations"
            style="background-color: #4D7160;" onclick="navigateToStudentRules(this)">
            <div class="nav-icons svg-container">


            </div>

            <div class="nav-label">
                <label class="poppins-regular" id="nav-student-rules-label1">Student rules & regulations</label>
            </div>
        </button>

    </div>

    <div>
        <button class="bar-button" id="employeeRule" data-id="employeeRule" style="background-color: #4F1C34;"
            onclick="alter(this); navigateToEmployeeRules(this)">
            <div class="nav-icons svg-container">
            </div>
            <div class="nav-label">
                <label class="poppins-regular" id="nav-employee-rules-label1">Employeesâ€™ rules & regulations</label>
            </div>
        </button>
    </div>


    <div>
        <button class="bar-button" data-id="academicRulesRegulations" style="background-color: #94331C;"
            onclick="navigateToAcademicRules(this)">
            <div class="nav-icons svg-container">

            </div>

            <div class="nav-label">

                <label class="poppins-regular" id="nav-academic-rules-label1">Academic rules & regulations</label>
            </div>
        </button>


    </div>

    <div>
        <button class="bar-button" id="SavedRulesRegulations" data-id="SavedRulesRegulations"
            style="background-color: #2F3E5F;" onclick="alter(this); navigateToSaved(this)">
            <div class="nav-icons svg-container">

            </div>

            <div class="nav-label">
                <label class="poppins-regular" id="nav-saved-rules-label">Saved rules & regulations</label>

            </div>
        </button>



    </div>

        <div>
            <button class="bar-button" id="historyButton" data-id="historyButton" onclick="alter(this); navigateToHistory()" style="background-color: #0F1734; font-size: 1.5em;" >
                <div class="nav-icons svg-container">
                    
                </div>

            <div class="nav-label">
                <label class="poppins-regular" style="word-break: keep-all;" id="nav-history-label">History</label>

            </div>
        </button>


    </div>

</div>



<div class="container-fluid mb-footer-space">
    <div class="row justify-content-center g-lg-4 g-sm-2 g-1 cards-container" 
    style="margin:1rem max(10px, calc(40px - 2vw)) 3rem max(10px, calc(40px - 2vw)) !important">

        @if (Model != null && Model.Any())

        {
            @foreach (var record in Model)
            {
                var displayName = isArabic && !string.IsNullOrEmpty(record.RegulationNameAr) 
                    ? record.RegulationNameAr 
                    : record.RegulationName;
                
                <!-- Dynamic card -->
                <div class="col-auto medium-card large-card">
                    <div class="card document-card" data-title="@displayName" data-department="@record.Department"
                        data-section="@(record.Sections != null ? string.Join(",", record.Sections) : "")"
                        data-type="@record.DocumentType" data-version-date="@record.VersionDate">
                        <div class="bookmark-wrapper">
                            <div class="bookmark" data-record-id="@record.Id" onclick="toggleBookmark(this)"></div>
                        </div>
                        <div class="document-icon" onclick="ViewPdf(@record.Id)" title="Click to preview PDF">
                            <div class="pdf-thumbnail-container">
                                <div class="thumbnail-loading" id="loading-@record.Id">
                                    <div class="spinner"></div>
                                    <span>Loading...</span>
                                </div>
                                <img class="pdf-thumbnail" 
                                     id="thumbnail-@record.Id"
                                     data-record-id="@record.Id"
                                     style="display:none;" 
                                     alt="PDF Thumbnail" />
                            </div>
                        </div>
                        <h2 class="card-title">@displayName</h2>

                        <p class="card-text d-none">@displayName @record.Description</p>

                        <div class="info-footer">

                            <div class="action-buttons">
                                <button class="action-btn" onclick="DownloadPdf(@record.Id)" title="Download">

                                    <i class="fas fa-download">
                                        <img src="~/svgs/cards/download-icon.svg" alt="Download" width="31" height="34" />
                                    </i>

                                </button>
                                <button class="action-btn" onclick="showRecordDetailsModal(@record.Id)" title="Information">

                                    <i class="fas fa-info">
                                        <img src="~/svgs/cards/info-icon.svg" alt="Information" class="info-icon" width="31"
                                            height="33" />

                                    </i>
                                </button>
                                <button class="action-btn" onclick="ViewPdf(@record.Id)" title="Read">

                                    <img src="~/svgs/cards/book-icon.svg" alt="Book" width="32" height="34" />
                                </button>
                                <button class="action-btn" onclick="handleAction('chat')" id="card-chat-icon" title="Chat">
                                    <i class="fas fa-comments">
                                        <img src="~/svgs/cards/chat-icon.svg" alt="Chat" width="32" height="34" />

                                    </i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

        else
        {
            <div class="col-12 text-center">
                <div class="card">

                    <div class="card-body">
                        <h3 id="no-records-heading">No records found</h3>
                        <p id="no-records-message">There are currently no rules and regulations available.</p>
                    </div>

                </div>
            </div>
        }

    </div>
</div>

<div class="chatbot-container">
    <div class="chat-icon" id="chat-icon">
        <img src="~/svgs/chatbot/chatbot-large.svg" width="80" height="80" />

    </div>

    <div class="chat-box" id="chat-box">
        <div class="chat-header">
            <div class="chat-title">
                <img src="~/svgs/chatbot/chatbot-header.svg" width="24" height="24" />
                <span id="chatbot-name">Chat with Mr. Kabsa</span>

            </div>
            <button class="chat-close" id="chat-close">
                <img src="~/svgs/chatbot/close-icon.svg" width="24" height="24" />
            </button>
        </div>

        <div class="chat-messages" id="chat-messages">

            <div class="message bot-message" id="chatbot-initial-message">Hi, how can I help you today?</div>
        </div>

        <div class="chat-input">
            <input type="text" id="message-input" placeholder="Type your message...">
            <button id="send-button">

                <img src="~/svgs/chatbot/send-icon.svg" width="24" height="24" />
            </button>
        </div>
    </div>
</div>

<div class="modal fade" id="recordDetailsModal" tabindex="-1" aria-labelledby="recordDetailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="modal-title-regulation-details">
                    Regulation Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">

                    <img src="~/svgs/cards/close.svg" width="24" height="24" />
                </button>
            </div>
            <div class="modal-body">
                <div id="modalRecordDetails">

                    <div class="spinner-container">
                        <div class="spinner-border" role="status">

                            <span class="visually-hidden" id="modal-loading-spinner-text">Loading...</span>
                        </div>
                        <p class="mt-3" id="modal-loading-message">Loading record details...</p>
                    </div>


                </div>
            </div>


        </div>
    </div>
</div>

@await Html.PartialAsync("_Footer")