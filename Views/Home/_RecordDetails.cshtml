@model dynamic
@using Microsoft.AspNetCore.Localization

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.Culture.Name ?? "en-US";
    var isArabic = currentCulture == "ar-SA";
    
    var displayName = isArabic && !string.IsNullOrEmpty(Model.RegulationNameAr) 
        ? Model.RegulationNameAr 
        : Model.RegulationName;

    var Description = isArabic && !string.IsNullOrEmpty(Model.DescriptionAr)
        ? Model.DescriptionAr
        : Model.Description;

    var ApprovingEntity = isArabic && !string.IsNullOrEmpty(Model.ApprovingEntityAr)
        ? Model.ApprovingEntityAr
        : Model.ApprovingEntity;

    // Document Type translation logic
    var displayDocumentType = Model.DocumentType;
    if (isArabic)
    {
        switch (Model.DocumentType)
        {
            case "Student guides & templates":
                displayDocumentType = "أدلة ونماذج الطلاب";
                break;
            case "Student rules & regulations":
                displayDocumentType = "قواعد وأنظمة الطلاب";
                break;
            case "Employees’ rules & regulations":
                displayDocumentType = "قواعد وأنظمة الموظفين";
                break;
            case "Academic rules & regulations":
                displayDocumentType = "قواعد وأنظمة أكاديمية";
                break;
        }
    }

    // Department translation logic
    var displayDepartment = Model.Department;
    if (isArabic)
    {
        switch (Model.Department)
        {
            case "Reg and Admission":
                displayDepartment = "التسجيل والقبول";
                break;
            case "CCSIT":
                displayDepartment = "كلية علوم الحاسب وتقنية المعلومات";
                break;
            case "Communication and tech":
                displayDepartment = "الاتصالات والتقنية";
                break;
            case "Hospital":
                displayDepartment = "المستشفى";
                break;
            case "Library":
                displayDepartment = "المكتبة";
                break;
            case "Students Affairs":
                displayDepartment = "شؤون الطلاب";
                break;
            case "Preparetory":
                displayDepartment = "السنة التحضيرية";
                break;
            case "Academic Affairs":
                displayDepartment = "الشؤون الأكاديمية";
                break;
        }
    }


}

@section Styles {
    <link rel="stylesheet" href="~/css/_RecordDetails.css" asp-append-version="true">
}

<div class="regulation-details-container">
    <!-- Header with gradient and status -->
    <div class="regulation-header">
        <div class="header-content">
            <div>
                <h3 class="header-title">@displayName</h3>
                <p class="header-subtitle" id="record-details-comprehensive-info">Comprehensive information about this regulation</p>
            </div>
        </div>
    </div>

    <!-- Main content container -->
    <div class="regulation-content">
        <!-- Key details in a responsive grid -->
        <div class="details-grid">
            <!--------------------------Regulation Name-----------------------------
            <div class="detail-card">
                <div class="detail-label">
                    <i class="fas fa-heading"></i> Regulation Name
                </div>
                <div class="detail-value">@displayName</div>
            </div>
            -->
            <div class="detail-card">
                <div class="detail-label">
                    <i class="fas fa-building"></i> Department
                </div>
                <div class="detail-value">@displayDepartment</div>
            </div>

            <div class="detail-card">
                <div class="detail-label">
                    <i class="fas fa-file-alt"></i> Document Type
                </div>
                <div class="detail-value">
                        <div class="detail-value">@displayDocumentType</div>
                </div>
            </div>

            <div class="detail-card">
                <div class="detail-label">
                    <i class="fas fa-code-branch"></i> Version Number
                </div>
                <div class="detail-value">@Model.Version</div>
            </div>

            <div class="detail-card">
                <div class="detail-label">
                    <i class="fas fa-calendar-alt"></i> Version Date
                </div>
                <div class="detail-value">@Model.VersionDate</div>
            </div>

        </div>

        <!-- Approval section with distinct styling -->
        <div class="section-group">
            <h3 class="section-title">
                <i class="fas fa-stamp"></i> Approval Information
            </h3>
            <div class="approval-details">
                <div class="approval-item">
                    <div class="approval-label" id="record-details-approving-entity-label">Approving Entity</div>
                    <div class="approval-value">@ApprovingEntity</div>
                </div>
                <div class="approval-item">
                    <div class="approval-label">Approval Date</div>
                    <div class="approval-value">@Model.ApprovalDate</div>
                </div>
            </div>
        </div>

        <!-- Description section -->
        <div class="section-group">
            <h3 class="section-title">
                <i class="fas fa-align-left"></i> Description
            </h3>
            <div class="description-box">
                @if (Model.Description != null && !string.IsNullOrWhiteSpace(Model.Description.ToString()))
                {
                    <p>@Description</p>
                }
                else
                {
                    <p class="no-description">No description available</p>
                }
            </div>
        </div>

        <!-- Contact information -->
        @if (Model.ContactInformation != null && ((IEnumerable<dynamic>)Model.ContactInformation).Any())
        {
            <div>
                <h3 class="section-title">
                    <i class="fas fa-address-book"></i> Department Contacts
                </h3>
                <div class="contacts-container">
                    @foreach (var contact in Model.ContactInformation)
                    {
                        <div class="contact-card">
                            <div class="contact-avatar">
                                @contact.Name.ToString().Substring(0, 1)
                            </div>
                            <div class="contact-details">
                                <div class="contact-name">@contact.Name</div>
                                <div class="contact-position">@contact.Department</div>
                                <div class="contact-info">
                                    @if (!string.IsNullOrEmpty(contact.Email?.ToString()))
                                    {
                                        <div class="contact-method">
                                            <i class="fas fa-envelope"> <img src="~/svgs/cards/email-icon.svg" width="20px"
                                                    height="20px"> </i>
                                            <a href="mailto:@contact.Email">@contact.Email</a>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(contact.Telephone?.ToString()))
                                    {
                                        <div class="contact-method">
                                            <i class="fas fa-phone-alt"> <img src="~/svgs/cards/telephone.svg" width="20px"
                                                    height="20px"> </i>
                                            <a href="tel:@contact.Telephone">@contact.Telephone</a>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(contact.Mobile?.ToString()))
                                    {
                                        <div class="contact-method">
                                            <i class="fas fa-mobile-alt"> <img src="~/svgs/cards/phone.svg" width="20px"
                                                    height="20px"> </i>
                                            <a href="tel:@contact.Mobile">@contact.Mobile</a>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    @* an optional close button for the modal (might be used - will be decided later)
                        <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i> Close
                        </button> 
                        *@
</div>


<script>
    // Add subtle animations to cards on load
    document.addEventListener('DOMContentLoaded', function () {
        const cards = document.querySelectorAll('.detail-card, .approval-item, .contact-card');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
            card.classList.add('animate-in');
        });
    });
</script>