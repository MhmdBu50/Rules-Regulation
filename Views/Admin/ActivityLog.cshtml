@using RulesRegulation.Models.ViewModels
@using Microsoft.AspNetCore.Localization
@model ActivityLogViewModel

@{
    ViewData["Title"] = "Activity Log";
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var currentCulture = requestCulture?.RequestCulture.Culture.Name ?? "en-US";
    var isArabic = currentCulture == "ar-SA";
}

@section Styles {
    <link rel="stylesheet" href="~/css/addContactInfo.css">
    <link rel="stylesheet" href="~/css/_rtl_Styles.css">
    <link rel="stylesheet" href="~/css/NewEditor.css">
    <link rel="stylesheet" href="~/css/adminPagesHeader.css">
    <link rel="stylesheet" href="~/css/activityLog.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
}

@section Scripts {
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/adminPagesHeader.js"></script>
    <script src="~/js/activityLog.js"></script>
}

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-spinner">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="mt-2">Loading details...</div>
    </div>
</div>

@Html.AntiForgeryToken()

<!-- Main Content -->
<div class="AddContactInfo mb-footer-space @(isArabic ? "rtl" : "ltr")">
    <!-- New Admin Header -->
    @await Html.PartialAsync("adminPagesHeader")
    <!-- Logo -->
    <div class="container logo-container">
        <img class="header-logo mx-auto d-block" src="~/imgs/IAU Logo (Horizontal).png" alt="IAU Logo">
    </div>

    <!-- Header -->
    <div class="main-header">
        <div class="container text-center d-flex flex-column align-items-center justify-content-center">
            <h1 class="display-5 fw-semibold mb-2">
                <span class="bi bi-activity me-3"></span>Activity Log
            </h1>
            <p class="subtitle text-white-50 mb-4">Monitor and track all privileged user actions and changes</p>
        </div>
    </div>

    <!-- Main Container -->
    <div class="container">
        <!-- Message Container -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <span class="bi bi-check-circle me-2"></span>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <span class="bi bi-exclamation-triangle me-2"></span>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Statistics Dashboard -->
        <div class="stats-grid">
            <div class="stat-card total">
                <span class="bi bi-bar-chart stat-icon"></span>
                <div class="stat-number">@Model.TotalActions</div>
                <div class="stat-label">Total Actions</div>
            </div>
            <div class="stat-card admin">
                <span class="bi bi-shield-check stat-icon"></span>
                <div class="stat-number">@Model.AdminActionsCount</div>
                <div class="stat-label">Admin Actions</div>
            </div>
            <div class="stat-card editor">
                <span class="bi bi-pencil-square stat-icon"></span>
                <div class="stat-number">@Model.EditorActionsCount</div>
                <div class="stat-label">Editor Actions</div>
            </div>
            <div class="stat-card records">
                <span class="bi bi-file-earmark-text stat-icon"></span>
                <div class="stat-number">@Model.RecordActionsCount</div>
                <div class="stat-label">Record Changes</div>
            </div>
            <div class="stat-card contacts">
                <span class="bi bi-person-vcard stat-icon"></span>
                <div class="stat-number">@Model.ContactActionsCount</div>
                <div class="stat-label">Contact Changes</div>
            </div>
        </div>

        <!-- Filters -->
        <div class="card mb-4" style="background-color: #f8f9fa; border: 1px solid #dee2e6;">
            <div class="card-body" style="padding: 1.5rem;">
                <form method="get" asp-action="ActivityLog" id="filterForm">
                    <div class="row g-3 align-items-end">
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Action Type</label>
                            <select name="actionTypeFilter" class="form-select" style="border: 1px solid #ced4da;">
                                <option value="">All Actions</option>
                                <option value="Add" selected="@(Model.ActionTypeFilter == "Add" ? "selected" : null)">Add</option>
                                <option value="Edit" selected="@(Model.ActionTypeFilter == "Edit" ? "selected" : null)">Edit</option>
                                <option value="Delete" selected="@(Model.ActionTypeFilter == "Delete" ? "selected" : null)">Delete</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Entity Type</label>
                            <select name="entityTypeFilter" class="form-select" style="border: 1px solid #ced4da;">
                                <option value="">All Entities</option>
                                <option value="Record" selected="@(Model.EntityTypeFilter == "Record" ? "selected" : null)">Record</option>
                                <option value="Contact" selected="@(Model.EntityTypeFilter == "Contact" ? "selected" : null)">Contact</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">User Role</label>
                            <select name="userRoleFilter" class="form-select" style="border: 1px solid #ced4da;">
                                <option value="">All Roles</option>
                                <option value="Admin" selected="@(Model.UserRoleFilter == "Admin" ? "selected" : null)">Admin</option>
                                <option value="Editor" selected="@(Model.UserRoleFilter == "Editor" ? "selected" : null)">Editor</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Start Date</label>
                            <input type="date" name="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" style="border: 1px solid #ced4da;" />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">End Date</label>
                            <input type="date" name="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" style="border: 1px solid #ced4da;" />
                        </div>
                        <div class="col-md-2">
                            <div class="d-grid">
                                <button type="submit" class="btn" style="background-color: #8B4513; color: white; border: none; font-weight: 600; padding: 0.5rem 1rem;">
                                    <span class="bi bi-funnel-fill me-1"></span>APPLY
                                </button>
                                <a href="@Url.Action("ActivityLog")" class="btn btn-secondary mt-2" style="font-weight: 600; padding: 0.5rem 1rem;">
                                    <span class="bi bi-x-circle me-1"></span>Clear
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Search Section -->
                    <div class="row mt-3">
                        <div class="col-md-10">
                            <input type="text" name="searchTerm" class="form-control" 
                                   placeholder="Search by user name, entity name, or details..." value="@Model.SearchTerm" 
                                   style="border: 1px solid #ced4da;" />
                        </div>
                        <div class="col-md-2">
                            <div class="d-grid">
                                <button type="submit" class="btn" style="background-color: #8B4513; color: white; border: none; font-weight: 600; padding: 0.5rem 1rem;">
                                    <span class="bi bi-search me-1"></span>SEARCH
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Activity Log Table -->
        <div class="card" style="background-color: none; border-radius: 12px;">
            <div class="card-body p-0">
                @if (Model.ActivityLogs?.Any() == true)
                {
                    <div class="table-responsive table-container">
                        <table class="table table-hover mb-0" style="border-collapse: separate; border-spacing: 0;">
                            <thead style="background-color: #4a5568; color: white;">
                                <tr>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Log ID
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        User
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Role
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Action
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Entity
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Entity Details
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Timestamp
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Summary
                                    </th>
                                    <th style="padding: 12px 16px; border: none; font-weight: 600; font-size: 0.875rem;">
                                        Options
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                        @foreach (var log in Model.ActivityLogs)
                        {
                            <tr style="border-bottom: 1px solid #e2e8f0;">
                                <!-- Log ID -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    <div style="font-weight: 600; color: #2563eb; font-size: 0.875rem;">
                                        #@log.LogId
                                    </div>
                                    <div style="font-size: 0.75rem; color: #718096;">
                                        LOG_ID
                                    </div>
                                </td>
                                <!-- User -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    <div style="font-weight: 500; color: #2d3748; font-size: 0.875rem;">
                                        @log.UserName
                                    </div>
                                    <div style="font-size: 0.75rem; color: #718096;">
                                        ID: @log.UserId
                                    </div>
                                </td>
                                <!-- Role -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    @if (log.IsAdminAction)
                                    {
                                        <span class="badge" style="background-color: #e53e3e; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-shield-fill-check me-1"></span>ADMIN
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge" style="background-color: #38a169; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-pencil-square me-1"></span>EDITOR
                                        </span>
                                    }
                                </td>
                                <!-- Action -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    @if (log.ActionType == "Add")
                                    {
                                        <span class="badge" style="background-color: #38a169; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-plus-circle me-1"></span>ADD
                                        </span>
                                    }
                                    else if (log.ActionType == "Edit")
                                    {
                                        <span class="badge" style="background-color: #f6ad55; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-pencil me-1"></span>EDIT
                                        </span>
                                    }
                                    else if (log.ActionType == "Delete")
                                    {
                                        <span class="badge" style="background-color: #e53e3e; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-trash me-1"></span>DELETE
                                        </span>
                                    }
                                </td>
                                <!-- Entity -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    @if (log.EntityType == "Record")
                                    {
                                        <span class="badge" style="background-color: #3182ce; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-file-text me-1"></span>RECORD
                                        </span>
                                    }
                                    else if (log.EntityType == "Contact")
                                    {
                                        <span class="badge" style="background-color: #805ad5; color: white; font-size: 0.75rem; padding: 4px 8px; border-radius: 4px;">
                                            <span class="bi bi-person-vcard me-1"></span>CONTACT
                                        </span>
                                    }
                                </td>
                                <!-- Entity Details -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    <div style="font-weight: 500; color: #2d3748; font-size: 0.875rem;">
                                        @(log.EntityName ?? "Unknown")
                                    </div>
                                    @if (log.EntityId.HasValue)
                                    {
                                        <div style="font-size: 0.75rem; color: #718096;">
                                            ID: @log.EntityId
                                        </div>
                                    }
                                </td>
                                <!-- Timestamp -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    <div style="font-weight: 600; color: #2d3748; font-size: 0.875rem;">
                                        @log.ActionTimestamp.ToString("MMM dd, yyyy")
                                    </div>
                                    <div style="font-size: 0.75rem; color: #718096;">
                                        @log.ActionTimestamp.ToString("HH:mm:ss")
                                    </div>
                                </td>
                                <!-- Summary -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    @if (!string.IsNullOrEmpty(log.Details))
                                    {
                                        <div style="font-size: 0.875rem; color: #4a5568; max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@log.Details">
                                            @log.Details
                                        </div>
                                    }
                                    else if (log.ActionType == "Add")
                                    {
                                        <div style="font-size: 0.875rem; color: #38a169;">
                                            <span class="bi bi-plus-circle me-1"></span>New @log.EntityDisplayName created
                                        </div>
                                    }
                                    else if (log.ActionType == "Delete")
                                    {
                                        <div style="font-size: 0.875rem; color: #e53e3e;">
                                            <span class="bi bi-trash me-1"></span>@log.EntityDisplayName removed
                                        </div>
                                    }
                                    else
                                    {
                                        <div style="font-size: 0.875rem; color: #718096;">No details available</div>
                                    }
                                </td>
                                <!-- Options -->
                                <td style="padding: 12px 16px; vertical-align: middle;">
                                    @if (log.HasDetails || !string.IsNullOrEmpty(log.OldValues) || !string.IsNullOrEmpty(log.NewValues))
                                    {
                                        <button class="btn btn-sm" style="background-color: transparent; border: 1px solid #cbd5e0; color: #4a5568; font-size: 0.75rem; padding: 4px 8px;" 
                                                onclick="viewDetails(@log.LogId)" data-bs-toggle="modal" data-bs-target="#activityDetailsModal">
                                            <span class="bi bi-eye me-1"></span>VIEW DETAILS
                                        </button>
                                    }
                                    else
                                    {
                                        <span style="color: #a0aec0; font-size: 0.75rem;">-</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="d-flex justify-content-between align-items-center p-3" style="border-top: 1px solid #e2e8f0; background-color: #f8f9fa;">
                            <div>
                                <small style="color: #718096; font-size: 0.875rem;">
                                    Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to 
                                    @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)) 
                                    of @Model.TotalCount entries
                                </small>
                            </div>
                            <nav>
                                <ul class="pagination pagination-sm mb-0">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@GetPageUrl(Model.CurrentPage - 1)" style="color: #4a5568; border: 1px solid #cbd5e0;">
                                                <span class="bi bi-chevron-left"></span> Previous
                                            </a>
                                        </li>
                                    }
                                    
                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@GetPageUrl(i)" style="@(i == Model.CurrentPage ? "background-color: #8B4513; border-color: #8B4513; color: white;" : "color: #4a5568; border: 1px solid #cbd5e0;")">@i</a>
                                        </li>
                                    }
                                
                                @if (Model.CurrentPage < Model.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@GetPageUrl(Model.CurrentPage + 1)" style="color: #4a5568; border: 1px solid #cbd5e0;">
                                            Next <span class="bi bi-chevron-right"></span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
                }
                else
                {
                    <div class="p-5 text-center" style="color: #718096;">
                        <span class="bi bi-inbox" style="font-size: 3rem; margin-bottom: 1rem; display: block;"></span>
                        <h5 style="color: #4a5568; margin-bottom: 0.5rem;">No Activity Found</h5>
                        <p style="margin-bottom: 0;">Try adjusting your filters or search terms.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Activity Details Modal -->
<div class="modal fade" id="activityDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <!-- Header -->
            <div class="modal-header" style="background: linear-gradient(135deg, #4a5568, #2d3748); color: white;">
                <h5 class="modal-title">
                    <span class="bi bi-info-circle me-2"></span>Activity Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            
            <!-- Modal Body -->
            <div class="modal-body" id="activityDetailsContent" style="padding: 2rem;">
                <!-- Loading State (will be replaced by JavaScript) -->
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div class="mt-2">Loading activity details...</div>
                </div>
            </div>
            
            <!-- Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <span class="bi bi-x-circle me-1"></span>Close
                </button>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetActionBadgeClass(string actionType)
    {
        return actionType switch
        {
            "Add" => "action-add",
            "Edit" => "action-edit", 
            "Delete" => "action-delete",
            _ => "bg-secondary"
        };
    }

    private string GetEntityBadgeClass(string entityType)
    {
        return entityType switch
        {
            "Record" => "entity-record",
            "Contact" => "entity-contact",
            _ => "bg-secondary"
        };
    }

    private string GetActionIcon(string actionType)
    {
        return actionType switch
        {
            "Add" => "➕",
            "Edit" => "✏️",
            "Delete" => "🗑️",
            _ => "📝"
        };
    }

    private string GetEntityIcon(string entityType)
    {
        return entityType switch
        {
            "Record" => "📄",
            "Contact" => "👤",
            _ => "📋"
        };
    }

    private string GetPageUrl(int page)
    {
        var queryParams = new Dictionary<string, string?>
        {
            ["page"] = page.ToString(),
            ["actionTypeFilter"] = Model.ActionTypeFilter,
            ["entityTypeFilter"] = Model.EntityTypeFilter,
            ["userRoleFilter"] = Model.UserRoleFilter,
            ["startDate"] = Model.StartDate?.ToString("yyyy-MM-dd"),
            ["endDate"] = Model.EndDate?.ToString("yyyy-MM-dd"),
            ["searchTerm"] = Model.SearchTerm
        };

        var queryString = string.Join("&", 
            queryParams.Where(kvp => !string.IsNullOrEmpty(kvp.Value))
                       .Select(kvp => $"{kvp.Key}={Uri.EscapeDataString(kvp.Value!)}"));

        return $"?{queryString}";
    }
}
